basePath: /api/v1
definitions:
  model.ROLE:
    enum:
    - user
    - admin
    type: string
    x-enum-varnames:
    - USER
    - ADMIN
  request.ConfirmInfo:
    properties:
      code:
        type: string
      saveInfoId:
        type: integer
    type: object
  request.DeleteProjectRequest:
    properties:
      createrId:
        type: integer
      id:
        type: integer
    type: object
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  request.NewProjectRequest:
    properties:
      createrId:
        type: integer
      name:
        type: string
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.ROLE'
      username:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:18888
info:
  contact: {}
  description: This is a sample server Account API.
  title: Swagger Account API
  version: "1.0"
paths:
  /protected/project/create:
    post:
      consumes:
      - application/json
      description: Create Project
      parameters:
      - description: project
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.NewProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create Project
      tags:
      - Project
  /protected/project/creater_id:
    get:
      consumes:
      - application/json
      description: Get project by createrId
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get project by createrId
      tags:
      - Project
  /protected/project/creater_id_detail/{id}:
    get:
      consumes:
      - application/json
      description: Get project create by createrId
      parameters:
      - description: Project id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get project create by createrId
      tags:
      - Project
  /protected/project/delete:
    delete:
      consumes:
      - application/json
      description: Delete Project
      parameters:
      - description: project
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.DeleteProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete Project
      tags:
      - Project
  /protected/project/joined:
    get:
      consumes:
      - application/json
      description: Get project joined
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get project joined
      tags:
      - Project
  /protected/project/joined_detail/{id}:
    get:
      consumes:
      - application/json
      description: Get project joined detail
      parameters:
      - description: Project id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get project joined detail
      tags:
      - Project
  /public/confirm_code:
    post:
      consumes:
      - application/json
      description: Confirm code register
      parameters:
      - description: Confirm code
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.ConfirmInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Confirm code register
      tags:
      - Register
  /public/login:
    post:
      consumes:
      - application/json
      description: Send info login
      parameters:
      - description: Send info
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send info login
      tags:
      - Login
  /public/send_info:
    post:
      consumes:
      - application/json
      description: Send info register
      parameters:
      - description: Send info
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send info register
      tags:
      - Register
swagger: "2.0"
